settings: {
  env_set: {

    # Priviledge separation user id
    _USER: "${PRIVILEDGED_USER:+-u ${PRIVILEDGED_USER}}",

    # Size of the cache storage
    CACHE_SIZE: "${CACHE_SIZE:-128M}",
    CACHE_STORAGE: "${CACHE_STORAGE:-malloc,${CACHE_SIZE}}",

    # Cache storage
    _STORAGE: "${CACHE_STORAGE:+-s ${CACHE_STORAGE}}",

    # Address:Port
    ADDRESS_PORT: "${ADDRESS_PORT:-:6081}",
    _ADDRESS: "${ADDRESS_PORT:+-a ${ADDRESS_PORT}}",

    # Admin:Port
    ADMIN_PORT: "${ADMIN_PORT:-:6082}",
    _ADMIN: "${ADMIN_PORT:+-T ${ADMIN_PORT}}",

    # Custom params
    PARAM_VALUE: "${$PARAM_VALUE:--p default_ttl=3600 -p default_grace=3600}",
    _VALUE: "${PARAM_VALUE}",

    PARAMS: "${_USER} ${_STORAGE} ${_ADDRESS} ${_ADMIN} ${_VALUE}",
  }
}

backends.service: {
  service_groups: INIT,
  command: "/docker-setup.sh",
  stdout: inherit,
  stderr: inherit,
}

vcls.service: {
  service_groups: INIT,
  after: backends.service,
  command: "python /assemble_vcls.py",
  stdout: inherit,
  stderr: inherit,
}

hosts.service: {
  service_groups: INIT,
  after: vcls.service,
  command: "/track_hosts",
  stdout: inherit,
  stderr: inherit,
}

varnish.service: {
  service_groups: IDLE,
  command: "varnishd -F -f /etc/varnish/default.vcl ${PARAMS}",
  stdout: inherit,
  stderr: inherit,
}
